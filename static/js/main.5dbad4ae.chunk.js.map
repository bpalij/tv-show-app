{"version":3,"sources":["redux/store.js","redux/actionTypes.js","misc/headersToObj.js","misc/getImageLinks.js","components/Form.js","components/Table.js","components/Paginator.js","components/ReduxApp.js","redux/actions.js","App.js","serviceWorker.js","index.js"],"names":["defaultPaginator","page","pages","disableFirst","disableLast","defaultFilters","query","year","sort","store","createStore","combineReducers","disableInput","state","arguments","length","undefined","type","data","action","headers","images","paginator","headerPage","headerPages","filters","window","__REDUX_DEVTOOLS_EXTENSION__","headersToObj","Object","toConsumableArray","entries","reduce","acc","val","concat","getImageLink","_callee","item","res","info","img","regenerator_default","a","wrap","_context","prev","next","fetch","show","ids","imdb","process","sent","json","tv_results","poster_path","Error","abrupt","t0","stop","_callee2","links","_context2","Promise","all","map","x","getImageLinks","yearOptions","i","Date","getFullYear","push","sortOptions","value","text","Form","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","buttonClick","bind","assertThisInitialized","dataTemp","_this$props","changeParams","startLoadData","loadedData","newFilters","objectSpread","Content-Type","trakt-api-version","trakt-api-key","then","ok","status","statusText","catch","e","alert","_this2","_this$state","react_default","createElement","className","htmlFor","id","disabled","onChange","setState","target","key","onClick","Component","Table","trakt","index","limit","getNumber","src","alt","title","watchers","Paginator","loadPage","paramsQuery","_this$props2","Math","min","ReduxApp","components_Form","components_Table","components_Paginator","mapDispatchToProps","params","connect","App","es","src_components_ReduxApp","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5dbad4ae.chunk.js","sourcesContent":["import { combineReducers, createStore } from 'redux';\nimport { START_LOAD_DATA, LOADED_DATA, CHANGED_PARAMS } from './actionTypes';\n\nconst disableInput = (state = true, action) => {\n  switch (action.type){\n    case START_LOAD_DATA:\n      return true;\n    case LOADED_DATA:\n      return false;\n    default:\n      return state;\n  }\n}\n\nconst data = (state = [], action) => {\n  switch (action.type) {\n    case LOADED_DATA:\n      return action.data.data;\n    default:\n      return state;\n  }\n}\n\nconst headers = (state = {}, action) => {\n  switch (action.type) {\n    case LOADED_DATA:\n      return action.data.headers; \n    default:\n      return state;\n  }  \n}\n\nconst images = (state = [], action) => {\n  switch (action.type) {\n    case LOADED_DATA:\n      return action.data.images;\n    default:\n      return state;\n  }\n}\n\nconst defaultPaginator = {\n  page: 1,\n  pages: 0,\n  disableFirst: true,\n  disableLast: true,\n}\n\nconst paginator = (state = defaultPaginator, action) => {\n  switch (action.type) {\n    case LOADED_DATA:\n      const headerPage = +action.data.headers['x-pagination-page'];\n      const headerPages = +action.data.headers['x-pagination-page-count'];\n      return {\n        page: headerPage || 1,\n        pages: headerPages || 0,\n        disableFirst: !!(typeof(headerPage)!=='number' || !headerPage || headerPage<=1),\n        disableLast: !!(typeof(headerPages)!=='number' || typeof(headerPage)!=='number' || !headerPage || !headerPages || headerPage>=headerPages),\n      };\n    default:\n      return state;\n  }\n}\n\n// TODO add reducer for filters\nconst defaultFilters = {\n  query: '',\n  year: '',\n  sort: 'trending',\n};\n\nconst filters = (state = defaultFilters, action) => {\n  switch(action.type) {\n    case CHANGED_PARAMS:\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(combineReducers({\n  disableInput,\n  data,\n  headers,\n  images,\n  paginator,\n  filters,\n}), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nexport default store;","export const START_LOAD_DATA = 'START_LOAD_DATA';\nexport const LOADED_DATA = 'LOADED_DATA';\nexport const CHANGED_PARAMS = 'CHANGED_PARAMS';","export default function(headers) {\n  return [ ...headers.entries() ].reduce((acc, val) => {\n    acc[`${val[0]}`] = val[1];\n    return acc;\n  }, {});\n}","async function getImageLink(item){\n  try {\n    const res = await fetch(`https://api.themoviedb.org/3/find/${item.show ? item.show.ids.imdb: item.ids.imdb}?api_key=${process.env.REACT_APP_TMDB_LOCALHOST}&language=en-US&external_source=imdb_id`);\n    const info = await res.json();\n    const img = info.tv_results[0].poster_path;\n    if(!img) {\n      throw new Error('no img');\n    } else {\n      return `https://image.tmdb.org/t/p/original/${img}`;\n    }  \n  }  catch(e) {\n    return '';\n  }\n}\nasync function getImageLinks(data){\n  const links = Promise.all(data.map((x) => getImageLink(x)));\n  return links;\n}\n\nexport default getImageLinks;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport headersToObj from '../misc/headersToObj';\nimport getImageLinks from '../misc/getImageLinks';\n\nconst yearOptions = [''];\nfor(let i=((new Date()).getFullYear()); i>=1800; i--){\n  yearOptions.push(`${i}`);\n};\nconst sortOptions = [\n  {value:'trending', text:'Trending'}, \n  {value:'popular', text:'Popular'}, \n  {value:'played/weekly', text:'Most played (weekly)'},\n  {value:'played/monthly', text:'Most played (monthly)'},\n  {value:'played/yearly', text:'Most played (yearly)'},\n  {value:'played/all', text:'Most played (all)'},\n  {value:'watched/weekly', text:'Most watched (weekly)'},\n  {value:'watched/monthly', text:'Most watched (monthly)'},\n  {value:'watched/yearly', text:'Most watched (yearly)'},\n  {value:'watched/all', text:'Most watched (all)'},\n  {value:'collected/weekly', text:'Most collected (weekly)'},\n  {value:'collected/monthly', text:'Most collected (monthly)'},\n  {value:'collected/yearly', text:'Most collected (yearly)'},\n  {value:'collected/all', text:'Most collected (all)'},\n  {value:'anticipated', text:'Most anticipated'},\n];\n\nfunction paramsQuery(filters){\n  if (filters.query && filters.year) {\n    return `${filters.sort}?query=${filters.query}&years=${filters.year}`;\n  } else if (filters.query) {\n    return `${filters.sort}?query=${filters.query}`;\n  } else if (filters.year) {\n    return `${filters.sort}?years=${filters.year}`;\n  } else {\n    return `${filters.sort}`;\n  }\n}\n\nclass Form extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      query: '',\n      year: '',\n      sort: 'trending',\n    };\n    this.buttonClick=this.buttonClick.bind(this);\n  }\n  buttonClick(){\n    const { changeParams, startLoadData, loadedData } = this.props;\n    const newFilters = {...this.state};\n    changeParams(newFilters);\n    startLoadData();\n    let headers;\n    let dataTemp;\n    fetch(`https://api.trakt.tv/shows/${paramsQuery(newFilters)}`,{\n      headers:{\n        'Content-Type': 'application/json',\n        'trakt-api-version': '2',\n        'trakt-api-key': `${process.env.REACT_APP_TRAKT_CLIENT_ID}`\n      }\n    })\n      .then((res) => {\n        if (res.ok) {\n          headers = headersToObj(res.headers);\n          return res.json();\n        } else {\n          throw new Error(`Error ${res.status}: ${res.statusText}`);\n        }\n      })\n      .then((data) => {\n        dataTemp=data;\n        return getImageLinks(data);\n      })\n      .then((img) => {loadedData(dataTemp, headers, img);})\n      .catch((e) => {alert(`Error '${e}', try to reload page`)});\n  }\n  render(){\n    const { query, year, sort } = this.state;\n    const { disableInput } = this.props;\n    return (\n      <form className=\"form-table-width main-form\">\n        <div className=\"form-flex-line\">\n          <div className=\"form-item\">\n            <label htmlFor=\"query-input\">Query</label>\n            <input type=\"text\" id=\"query-input\" value={query} disabled={disableInput} onChange={(e) => {this.setState({query: e.target.value})}}/>\n          </div>\n          <div className=\"form-item\">\n            <label htmlFor=\"year-select\">Year</label>\n            <select id=\"year-select\" value={year} disabled={disableInput} onChange={(e) => {this.setState({year: e.target.value})}}>\n              {yearOptions.map((x)=>(<option value={x} key={x}>{x}</option>))}\n            </select>\n          </div>\n          <div className=\"form-item\">\n            <label htmlFor=\"sort-select\">Sort</label>\n            <select id=\"sort-select\" value={sort} disabled={disableInput} onChange={(e) => {this.setState({sort: e.target.value})}}>\n              {sortOptions.map((x) => (<option key={x.value} value={x.value}>{x.text}</option>))}\n            </select>\n          </div>\n        </div>\n        <div className=\"form-flex-right-button\">\n          <div className=\"form-item\">\n            <button type=\"button\" onClick={this.buttonClick} disabled={disableInput}>Change</button>\n          </div>\n        </div>\n      </form>\n    )\n  }\n}\n\nForm.propTypes = {\n  disableInput: PropTypes.bool.isRequired,\n  startLoadData: PropTypes.func.isRequired,\n  loadedData: PropTypes.func.isRequired,\n  changeParams: PropTypes.func.isRequired,\n}\n\nexport default Form;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction getNumber(headers, index) {\n  const page = +headers['x-pagination-page'];\n  const limit = +headers['x-pagination-limit'];\n  const pages = +headers['x-pagination-page-count'];\n  if(!page || !limit || !pages){\n    return '';\n  } else {\n    return ((page-1)*limit+(index+1));\n  }\n}\n\nfunction Table(props){\n  const { headers, data, images } = props;\n  return (\n    <table className=\"form-table-width main-table\">\n      <thead>\n        <tr>\n          <th>Number</th>\n          <th>Poster</th>\n          <th>Show name</th>\n          <th>Watchers</th>\n          <th>Year</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((x, i) => {\n          return (\n            <tr key={x.show ? x.show.ids.trakt : x.ids.trakt}>\n              <td>{getNumber(headers, i)}</td>\n              <td><img src={images[i]} alt={`${x.show ? x.show.title : x.title} poster`} /></td>\n              <td>{x.show ? x.show.title : x.title}</td>\n              <td>{x.watchers}</td>\n              <td>{x.show ? x.show.year : x.year}</td>\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nTable.propTypes = {\n  headers: PropTypes.object.isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default Table;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport headersToObj from '../misc/headersToObj';\nimport getImageLinks from '../misc/getImageLinks';\n\nfunction paramsQuery(filters, page){\n  if (filters.query && filters.year) {\n    return `${filters.sort}?query=${filters.query}&years=${filters.year}&page=${page}`;\n  } else if (filters.query) {\n    return `${filters.sort}?query=${filters.query}&page=${page}`;\n  } else if (filters.year) {\n    return `${filters.sort}?years=${filters.year}&page=${page}`;\n  } else {\n    return `${filters.sort}?page=${page}`;\n  }\n}\n\nclass Paginator extends Component{\n  constructor(props){\n    super(props);\n    this.loadPage=this.loadPage.bind(this);\n  }\n  loadPage(page){\n    const { loadedData, startLoadData, filters } = this.props;\n    startLoadData();\n    let headers;\n    let dataTemp;\n    fetch(`https://api.trakt.tv/shows/${paramsQuery(filters, page)}`,{\n      headers:{\n        'Content-Type': 'application/json',\n        'trakt-api-version': '2',\n        'trakt-api-key': `${process.env.REACT_APP_TRAKT_CLIENT_ID}`\n      }\n    })\n      .then((res) => {\n        if (res.ok) {\n          headers = headersToObj(res.headers);\n          return res.json();\n        } else {\n          throw new Error(`Error ${res.status}: ${res.statusText}`);\n        }\n      })\n      .then((data) => {\n        dataTemp=data;\n        return getImageLinks(data);\n      })\n      .then((img) => {loadedData(dataTemp, headers, img);})\n      .catch((e) => {alert(`Error '${e}', try to reload page`)});\n  }\n  render() {\n    const { disableInput, paginator } = this.props;\n    return (\n      <div>\n        <button type='button' disabled={disableInput || paginator.disableFirst} onClick={() => {this.loadPage(1);}}>{' << First '}</button>\n        <button type='button' disabled={disableInput || paginator.disableFirst} onClick={() => {this.loadPage(+(paginator.page)-1 || 1);}}>{' < Previous '}</button>\n        {` ${paginator.page} of ${paginator.pages} `}\n        <button type='button' disabled={disableInput || paginator.disableLast} onClick={() => {this.loadPage(Math.min(+(paginator.page)+1 || 0, +(paginator.pages) || 0) || 1);}}>{' Next > '}</button>\n        <button type='button' disabled={disableInput || paginator.disableLast} onClick={() => {this.loadPage(+(paginator.pages) || 1);}}>{' Last >> '}</button>\n      </div>\n    )\n  }\n}\n\nPaginator.propTypes = {\n  startLoadData: PropTypes.func.isRequired,\n  loadedData: PropTypes.func.isRequired,\n  disableInput: PropTypes.bool.isRequired,\n  paginator: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pages: PropTypes.number.isRequired,\n    disableFirst: PropTypes.bool.isRequired,\n    disableLast: PropTypes.bool.isRequired,\n  }).isRequired,\n  filters: PropTypes.shape({\n    query: PropTypes.string.isRequired,\n    year: PropTypes.string.isRequired,\n    sort: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default Paginator;","import React, { Component } from 'react';\nimport headersToObj from '../misc/headersToObj';\nimport PropTypes from 'prop-types';\nimport { startLoadData, loadedData, changeParams } from '../redux/actions';\nimport { connect } from 'react-redux';\nimport './ReduxApp.css';\nimport Form from './Form';\nimport Table from './Table';\nimport Paginator from './Paginator';\nimport getImageLinks from '../misc/getImageLinks';\n\nclass ReduxApp extends Component {\n  componentDidMount() {\n    const { loadedData } = this.props;\n    let headers;\n    let dataTemp;\n    fetch('https://api.trakt.tv/shows/trending',{\n      headers:{\n        'Content-Type': 'application/json',\n        'trakt-api-version': '2',\n        'trakt-api-key': `${process.env.REACT_APP_TRAKT_CLIENT_ID}`\n      }\n    })\n      .then((res) => {\n        if (res.ok) {\n          headers = headersToObj(res.headers);\n          return res.json();\n        } else {\n          throw new Error(`Error ${res.status}: ${res.statusText}`);\n        }\n      })\n      .then((data) => {\n        dataTemp=data;\n        return getImageLinks(data);\n      })\n      .then((img) => {loadedData(dataTemp, headers, img);})\n      .catch((e) => {alert(`Error '${e}', try to reload page`)});\n  }\n  render() {\n    const { headers, data, images, disableInput, changeParams, startLoadData, loadedData, paginator, filters } = this.props;\n    return (\n      <div className=\"flexbox-center\">\n        <Form disableInput={disableInput} changeParams={changeParams} startLoadData={startLoadData} loadedData={loadedData} />\n        <Table headers={headers} data={data} images={images} />\n        <Paginator paginator={paginator} startLoadData={startLoadData} loadedData={loadedData} filters={filters} disableInput={disableInput} />\n        <div className=\"final-whitespace\" />\n      </div>\n    )\n  }\n}\n\nReduxApp.propTypes = {\n  startLoadData: PropTypes.func.isRequired,\n  loadedData: PropTypes.func.isRequired,\n  changeParams: PropTypes.func.isRequired,\n  disableInput: PropTypes.bool.isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  headers: PropTypes.object.isRequired,\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  paginator: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pages: PropTypes.number.isRequired,\n    disableFirst: PropTypes.bool.isRequired,\n    disableLast: PropTypes.bool.isRequired,\n  }).isRequired,\n  filters: PropTypes.shape({\n    query: PropTypes.string.isRequired,\n    year: PropTypes.string.isRequired,\n    sort: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nconst mapStateToProps = (state) => {\n  const { disableInput, data, headers, images, paginator, filters } = state;\n  return { disableInput, data, headers, images, paginator, filters };\n}\n\nconst mapDispatchToProps = {\n  startLoadData,\n  loadedData,\n  changeParams,  \n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxApp);","import { START_LOAD_DATA, LOADED_DATA, CHANGED_PARAMS } from './actionTypes';\n\nexport const startLoadData = () => {\n  return {\n    type: START_LOAD_DATA,\n  }\n}\n\nexport const loadedData = (data, headers, images) => {\n  return {\n    type: LOADED_DATA,\n    data: {\n      data,\n      headers,\n      images,\n    }\n  }\n}\n\nexport const changeParams = (params) => {\n  return {\n    type: CHANGED_PARAMS,\n    data: params,\n  }\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport ReduxApp from './components/ReduxApp';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ReduxApp />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}