{"version":3,"sources":["redux/store.js","redux/actionTypes.js","misc/headersToObj.js","misc/getImageLinks.js","components/Form.js","components/Table.js","components/Paginator.js","components/ErrorMesage.js","components/ReduxApp.js","redux/actions.js","App.js","serviceWorker.js","index.js"],"names":["defaultPaginator","page","pages","disableFirst","disableLast","defaultFilters","query","year","sort","store","createStore","combineReducers","disableInput","state","arguments","length","undefined","type","data","action","headers","images","paginator","headerPage","headerPages","filters","err","window","__REDUX_DEVTOOLS_EXTENSION__","headersToObj","Object","toConsumableArray","entries","reduce","acc","_val","_val2","slicedToArray","key","val","concat","getImageLink","_callee","item","res","info","img","regenerator_default","a","wrap","_context","prev","next","fetch","show","ids","imdb","process","sent","json","tv_results","poster_path","Error","abrupt","t0","stop","_callee2","links","_context2","Promise","all","map","x","getImageLinks","yearOptions","i","Date","getFullYear","push","sortOptions","value","text","Form","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","buttonClick","bind","assertThisInitialized","dataTemp","_this$props","changeParams","startLoadData","loadedData","setError","newFilters","objectSpread","Content-Type","trakt-api-version","trakt-api-key","then","ok","status","statusText","catch","e","_this2","_this$state","react_default","createElement","className","htmlFor","id","disabled","onChange","setState","target","onBlur","onClick","Component","Table","trakt","index","limit","getNumber","src","alt","title","watchers","Paginator","loadPage","paramsQuery","_this$props2","Math","min","ErrorMessage","ReduxApp","components_Form","components_Table","components_Paginator","ErrorMesage","mapDispatchToProps","params","connect","App","es","src_components_ReduxApp","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4829da72.chunk.js","sourcesContent":["import { combineReducers, createStore } from 'redux';\nimport {\n  START_LOAD_DATA, LOADED_DATA, CHANGED_PARAMS, ERROR_MESSAGE,\n} from './actionTypes';\n\nconst disableInput = (state = true, action) => {\n  switch (action.type) {\n    case START_LOAD_DATA:\n      return true;\n    case LOADED_DATA:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst data = (state = [], action) => {\n  switch (action.type) {\n    case LOADED_DATA:\n      return action.data.data;\n    default:\n      return state;\n  }\n};\n\nconst headers = (state = {}, action) => {\n  switch (action.type) {\n    case LOADED_DATA:\n      return action.data.headers;\n    default:\n      return state;\n  }\n};\n\nconst images = (state = [], action) => {\n  switch (action.type) {\n    case LOADED_DATA:\n      return action.data.images;\n    default:\n      return state;\n  }\n};\n\nconst defaultPaginator = {\n  page: 1,\n  pages: 0,\n  disableFirst: true,\n  disableLast: true,\n};\n\nconst paginator = (state = defaultPaginator, action) => {\n  let headerPage;\n  let headerPages;\n  switch (action.type) {\n    case LOADED_DATA:\n      headerPage = +action.data.headers['x-pagination-page'];\n      headerPages = +action.data.headers['x-pagination-page-count'];\n      return {\n        page: headerPage || 1,\n        pages: headerPages || 0,\n        disableFirst: !!(typeof (headerPage) !== 'number' || !headerPage || headerPage <= 1),\n        disableLast: !!(typeof (headerPages) !== 'number' || typeof (headerPage) !== 'number' || !headerPage || !headerPages || headerPage >= headerPages),\n      };\n    default:\n      return state;\n  }\n};\n\nconst defaultFilters = {\n  query: '',\n  year: '',\n  sort: 'trending',\n};\n\nconst filters = (state = defaultFilters, action) => {\n  switch (action.type) {\n    case CHANGED_PARAMS:\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nconst err = (state = '', action) => {\n  switch (action.type) {\n    case ERROR_MESSAGE:\n      return action.data;\n    default:\n      return state;\n  }\n};\n\n/* eslint-disable no-underscore-dangle */\nconst store = createStore(\n  combineReducers({\n    disableInput,\n    data,\n    headers,\n    images,\n    paginator,\n    filters,\n    err,\n  }),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n/* eslint-enable */\n\nexport default store;\n","export const START_LOAD_DATA = 'START_LOAD_DATA';\nexport const LOADED_DATA = 'LOADED_DATA';\nexport const CHANGED_PARAMS = 'CHANGED_PARAMS';\nexport const ERROR_MESSAGE = 'ERROR_MESSAGE';\n","export default function (headers) {\n  return [...headers.entries()].reduce((acc, _val) => {\n    const [key, val] = _val;\n    acc[`${key}`] = val;\n    return acc;\n  }, {});\n}\n","async function getImageLink(item) {\n  try {\n    const res = await fetch(`https://api.themoviedb.org/3/find/${item.show ? item.show.ids.imdb : item.ids.imdb}?api_key=${process.env.REACT_APP_TMDB_LOCALHOST}&language=en-US&external_source=imdb_id`);\n    const info = await res.json();\n    const img = info.tv_results[0].poster_path;\n    if (!img) {\n      throw new Error('no img');\n    } else {\n      return `https://image.tmdb.org/t/p/original/${img}`;\n    }\n  } catch (e) {\n    return '';\n  }\n}\nasync function getImageLinks(data) {\n  const links = Promise.all(data.map(x => getImageLink(x)));\n  return links;\n}\n\nexport default getImageLinks;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport headersToObj from '../misc/headersToObj';\nimport getImageLinks from '../misc/getImageLinks';\n\nconst yearOptions = [''];\nfor (let i = ((new Date()).getFullYear()); i >= 1800; i -= 1) {\n  yearOptions.push(`${i}`);\n}\n\nconst sortOptions = [\n  { value: 'trending', text: 'Trending' },\n  { value: 'popular', text: 'Popular' },\n  { value: 'played/weekly', text: 'Most played (weekly)' },\n  { value: 'played/monthly', text: 'Most played (monthly)' },\n  { value: 'played/yearly', text: 'Most played (yearly)' },\n  { value: 'played/all', text: 'Most played (all)' },\n  { value: 'watched/weekly', text: 'Most watched (weekly)' },\n  { value: 'watched/monthly', text: 'Most watched (monthly)' },\n  { value: 'watched/yearly', text: 'Most watched (yearly)' },\n  { value: 'watched/all', text: 'Most watched (all)' },\n  { value: 'collected/weekly', text: 'Most collected (weekly)' },\n  { value: 'collected/monthly', text: 'Most collected (monthly)' },\n  { value: 'collected/yearly', text: 'Most collected (yearly)' },\n  { value: 'collected/all', text: 'Most collected (all)' },\n  { value: 'anticipated', text: 'Most anticipated' },\n];\n\nfunction paramsQuery(filters) {\n  if (filters.query && filters.year) {\n    return `${filters.sort}?query=${filters.query}&years=${filters.year}`;\n  }\n  if (filters.query) {\n    return `${filters.sort}?query=${filters.query}`;\n  }\n  if (filters.year) {\n    return `${filters.sort}?years=${filters.year}`;\n  }\n\n  return `${filters.sort}`;\n}\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      year: '',\n      sort: 'trending',\n    };\n    this.buttonClick = this.buttonClick.bind(this);\n  }\n\n  buttonClick() {\n    const {\n      changeParams, startLoadData, loadedData, setError,\n    } = this.props;\n    const newFilters = { ...this.state };\n    changeParams(newFilters);\n    startLoadData();\n    let headers;\n    let dataTemp;\n    fetch(`https://api.trakt.tv/shows/${paramsQuery(newFilters)}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'trakt-api-version': '2',\n        'trakt-api-key': `${process.env.REACT_APP_TRAKT_CLIENT_ID}`,\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          headers = headersToObj(res.headers);\n          return res.json();\n        }\n        throw new Error(`Error ${res.status}: ${res.statusText}`);\n      })\n      .then((data) => {\n        dataTemp = data;\n        return getImageLinks(data);\n      })\n      .then((img) => { loadedData(dataTemp, headers, img); })\n      .catch((e) => { setError(`Error '${e}', try to reload page`); });\n  }\n\n  render() {\n    const { query, year, sort } = this.state;\n    const { disableInput } = this.props;\n    return (\n      <form className=\"form-table-width main-form\">\n        <div className=\"form-flex-line\">\n          <div className=\"form-item\">\n            <label htmlFor=\"query-input\">\n              Query\n              <input type=\"text\" id=\"query-input\" value={query} disabled={disableInput} onChange={(e) => { this.setState({ query: e.target.value }); }} />\n            </label>\n          </div>\n          <div className=\"form-item\">\n            <label htmlFor=\"year-select\">\n              Year\n              <select id=\"year-select\" value={year} disabled={disableInput} onChange={(e) => { this.setState({ year: e.target.value }); }} onBlur={(e) => { this.setState({ year: e.target.value }); }}>\n                {yearOptions.map(x => (<option value={x} key={x}>{x}</option>))}\n              </select>\n            </label>\n          </div>\n          <div className=\"form-item\">\n            <label htmlFor=\"sort-select\">\n              Sort\n              <select id=\"sort-select\" value={sort} disabled={disableInput} onChange={(e) => { this.setState({ sort: e.target.value }); }} onBlur={(e) => { this.setState({ sort: e.target.value }); }}>\n                {sortOptions.map(x => (<option key={x.value} value={x.value}>{x.text}</option>))}\n              </select>\n            </label>\n          </div>\n        </div>\n        <div className=\"form-flex-right-button\">\n          <div className=\"form-item\">\n            <button type=\"button\" onClick={this.buttonClick} disabled={disableInput}>Change</button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  disableInput: PropTypes.bool.isRequired,\n  startLoadData: PropTypes.func.isRequired,\n  loadedData: PropTypes.func.isRequired,\n  changeParams: PropTypes.func.isRequired,\n  setError: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction getNumber(headers, index) {\n  const page = +headers['x-pagination-page'];\n  const limit = +headers['x-pagination-limit'];\n  const pages = +headers['x-pagination-page-count'];\n  if (!page || !limit || !pages) {\n    return '';\n  }\n  return ((page - 1) * limit + (index + 1));\n}\n\nfunction Table(props) {\n  const { headers, data, images } = props;\n  return (\n    <table className=\"form-table-width main-table\">\n      <thead>\n        <tr>\n          <th>Number</th>\n          <th>Poster</th>\n          <th>Show name</th>\n          <th>Watchers</th>\n          <th>Year</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((x, i) => (\n          <tr key={x.show ? x.show.ids.trakt : x.ids.trakt}>\n            <td>{getNumber(headers, i)}</td>\n            <td><img src={images[i]} alt={`${x.show ? x.show.title : x.title} poster`} /></td>\n            <td>{x.show ? x.show.title : x.title}</td>\n            <td>{x.watchers}</td>\n            <td>{x.show ? x.show.year : x.year}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTable.propTypes = {\n  headers: PropTypes.instanceOf(Object).isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Table;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport headersToObj from '../misc/headersToObj';\nimport getImageLinks from '../misc/getImageLinks';\n\nfunction paramsQuery(filters, page) {\n  if (filters.query && filters.year) {\n    return `${filters.sort}?query=${filters.query}&years=${filters.year}&page=${page}`;\n  }\n  if (filters.query) {\n    return `${filters.sort}?query=${filters.query}&page=${page}`;\n  }\n  if (filters.year) {\n    return `${filters.sort}?years=${filters.year}&page=${page}`;\n  }\n\n  return `${filters.sort}?page=${page}`;\n}\n\nclass Paginator extends Component {\n  constructor(props) {\n    super(props);\n    this.loadPage = this.loadPage.bind(this);\n  }\n\n  loadPage(page) {\n    const {\n      loadedData, startLoadData, filters, setError,\n    } = this.props;\n    startLoadData();\n    let headers;\n    let dataTemp;\n    fetch(`https://api.trakt.tv/shows/${paramsQuery(filters, page)}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'trakt-api-version': '2',\n        'trakt-api-key': `${process.env.REACT_APP_TRAKT_CLIENT_ID}`,\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          headers = headersToObj(res.headers);\n          return res.json();\n        }\n        throw new Error(`Error ${res.status}: ${res.statusText}`);\n      })\n      .then((data) => {\n        dataTemp = data;\n        return getImageLinks(data);\n      })\n      .then((img) => { loadedData(dataTemp, headers, img); })\n      .catch((e) => { setError(`Error '${e}', try to reload page`); });\n  }\n\n  render() {\n    const { disableInput, paginator } = this.props;\n    return (\n      <div>\n        <button type=\"button\" disabled={disableInput || paginator.disableFirst} onClick={() => { this.loadPage(1); }}>{' << First '}</button>\n        <button type=\"button\" disabled={disableInput || paginator.disableFirst} onClick={() => { this.loadPage(+(paginator.page) - 1 || 1); }}>{' < Previous '}</button>\n        {` ${paginator.page} of ${paginator.pages} `}\n        <button type=\"button\" disabled={disableInput || paginator.disableLast} onClick={() => { this.loadPage(Math.min(+(paginator.page) + 1 || 0, +(paginator.pages) || 0) || 1); }}>{' Next > '}</button>\n        <button type=\"button\" disabled={disableInput || paginator.disableLast} onClick={() => { this.loadPage(+(paginator.pages) || 1); }}>{' Last >> '}</button>\n      </div>\n    );\n  }\n}\n\nPaginator.propTypes = {\n  startLoadData: PropTypes.func.isRequired,\n  loadedData: PropTypes.func.isRequired,\n  disableInput: PropTypes.bool.isRequired,\n  setError: PropTypes.func.isRequired,\n  paginator: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pages: PropTypes.number.isRequired,\n    disableFirst: PropTypes.bool.isRequired,\n    disableLast: PropTypes.bool.isRequired,\n  }).isRequired,\n  filters: PropTypes.shape({\n    query: PropTypes.string.isRequired,\n    year: PropTypes.string.isRequired,\n    sort: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Paginator;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ErrorMessage(props) {\n  const { err } = props;\n  return (<div className=\"error-message\">{err}</div>);\n}\n\nErrorMessage.propTypes = {\n  err: PropTypes.string.isRequired,\n};\n\nexport default ErrorMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport headersToObj from '../misc/headersToObj';\nimport * as actionCreators from '../redux/actions';\nimport './ReduxApp.css';\nimport Form from './Form';\nimport Table from './Table';\nimport Paginator from './Paginator';\nimport getImageLinks from '../misc/getImageLinks';\nimport ErrorMessage from './ErrorMesage';\n\nclass ReduxApp extends Component {\n  componentDidMount() {\n    const { loadedData, setError } = this.props;\n    let headers;\n    let dataTemp;\n    fetch('https://api.trakt.tv/shows/trending', {\n      headers: {\n        'Content-Type': 'application/json',\n        'trakt-api-version': '2',\n        'trakt-api-key': `${process.env.REACT_APP_TRAKT_CLIENT_ID}`,\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          headers = headersToObj(res.headers);\n          return res.json();\n        }\n        throw new Error(`Error ${res.status}: ${res.statusText}`);\n      })\n      .then((data) => {\n        dataTemp = data;\n        return getImageLinks(data);\n      })\n      .then((img) => { loadedData(dataTemp, headers, img); })\n      .catch((e) => { setError(`Error '${e}', try to reload page`); });\n  }\n\n  render() {\n    const {\n      headers,\n      data,\n      images,\n      disableInput,\n      changeParams,\n      startLoadData,\n      loadedData,\n      paginator,\n      filters,\n      err,\n      setError,\n    } = this.props;\n    return (\n      <div className=\"flexbox-center\">\n        {!err && (\n        <Form\n          disableInput={disableInput}\n          changeParams={changeParams}\n          startLoadData={startLoadData}\n          loadedData={loadedData}\n          setError={setError}\n        />\n        )}\n        {!err && <Table headers={headers} data={data} images={images} />}\n        {!err && (\n        <Paginator\n          paginator={paginator}\n          startLoadData={startLoadData}\n          loadedData={loadedData}\n          filters={filters}\n          disableInput={disableInput}\n          setError={setError}\n        />\n        )}\n        {!err && <div className=\"final-whitespace\" />}\n        {err && <ErrorMessage err={err} />}\n      </div>\n    );\n  }\n}\n\nReduxApp.propTypes = {\n  startLoadData: PropTypes.func.isRequired,\n  loadedData: PropTypes.func.isRequired,\n  changeParams: PropTypes.func.isRequired,\n  disableInput: PropTypes.bool.isRequired,\n  setError: PropTypes.bool.isRequired,\n  err: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  headers: PropTypes.instanceOf(Object).isRequired,\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  paginator: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pages: PropTypes.number.isRequired,\n    disableFirst: PropTypes.bool.isRequired,\n    disableLast: PropTypes.bool.isRequired,\n  }).isRequired,\n  filters: PropTypes.shape({\n    query: PropTypes.string.isRequired,\n    year: PropTypes.string.isRequired,\n    sort: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const {\n    disableInput, data, headers, images, paginator, filters, err,\n  } = state;\n  return {\n    disableInput, data, headers, images, paginator, filters, err,\n  };\n};\n\nconst mapDispatchToProps = {\n  startLoadData: actionCreators.startLoadData,\n  loadedData: actionCreators.loadedData,\n  changeParams: actionCreators.changeParams,\n  setError: actionCreators.setError,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxApp);\n","import {\n  START_LOAD_DATA, LOADED_DATA, CHANGED_PARAMS, ERROR_MESSAGE,\n} from './actionTypes';\n\nexport const startLoadData = () => ({\n  type: START_LOAD_DATA,\n});\n\nexport const loadedData = (data, headers, images) => ({\n  type: LOADED_DATA,\n  data: {\n    data,\n    headers,\n    images,\n  },\n});\n\nexport const changeParams = params => ({\n  type: CHANGED_PARAMS,\n  data: params,\n});\n\nexport const setError = err => ({\n  type: ERROR_MESSAGE,\n  data: err,\n});\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport ReduxApp from './components/ReduxApp';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ReduxApp />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}